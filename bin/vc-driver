#!/usr/bin/env python3
#
# The driver for the W3C Verifiable Claims test suite.
import csv
import json
from argparse import ArgumentParser
import os
import sys

USAGE = """%(prog)s -c test-suite-config.json

Runs the Verifiable Claims test suite.

************** %(prog)s command line options **************"""

DEFAULTS = {
    'config': os.path.join(
        os.path.dirname(os.path.abspath(__file__)), '..',
        'vc-data-model-1.0.json'),
    'issuer': os.path.join(
        os.path.dirname(os.path.abspath(__file__)), 'vc-issuer'),
    'verifier': os.path.join(
        os.path.dirname(os.path.abspath(__file__)), 'vc-verifier')
}


def _parse_args():
    """Get options from command line and return them."""
    parser = ArgumentParser(usage=USAGE)
    parser.add_argument(
        '-c', '--config', action='store', default=DEFAULTS['config'],
        dest='config', help='The test suite configuration file.'
        ' [%(default)s]')
    parser.add_argument(
        '-i', '--issuer', action='store', default=DEFAULTS['issuer'],
        help='The verifiable claims issuer program.'
        ' [%(default)s]')
    parser.add_argument(
        '-v', '--verifier', action='store', default=DEFAULTS['verifier'],
        help='The verifiable claims verifier program.'
        ' [%(default)s]')

    return parser.parse_args()


if __name__ == '__main__':
    args = _parse_args()

    if not os.path.exists(args.config):
        print('Error: You must specify a valid configuration file.')
        sys.exit(1)
    if not os.path.exists(args.issuer):
        print('Error: You must specify a valid issuer program.')
        sys.exit(1)
    if not os.path.exists(args.verifier):
        print('Error: You must specify a valid verifier program.')
        sys.exit(1)
